{
  "swagger": "2.0",
  "info": {
    "title": "adopt-a-friend-api",
    "description": "RESTful API project for managing dog adoptions",
    "version": "1.0.0"
  },
  "host": "adopt-a-friend-rest-api.onrender.com",
  "basePath": "/",
  "schemes": ["https"],
  "paths": {
    "/": {
      "get": {
        "tags": ["Home"],
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api-docs": {
      "get": {
        "description": "",
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/dogs/": {
      "get": {
        "tags": ["Dogs"],
        "description": "",
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "tags": ["Dogs"],
        "description": "",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "Dog object to create or update",
            "schema": {
              "type": "object",
              "properties": {
                "name": { "type": "string", "minLength": 1 },
                "breed": { "type": "string", "minLength": 3 },
                "age": { "type": "integer", "minimum": 0 },
                "size": {
                  "type": "string",
                  "enum": ["Small", "Medium", "Large"]
                },
                "shelterId": {
                  "type": "string",
                  "pattern": "^[a-fA-F0-9]{24}$"
                },
                "adopted": { "type": "boolean" },
                "description": { "type": "string", "minLength": 10 },
                "vaccinated": { "type": "boolean" }
              },
              "required": [
                "name",
                "breed",
                "age",
                "size",
                "shelterId",
                "adopted",
                "description",
                "vaccinated"
              ]
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/dogs/{id}": {
      "get": {
        "tags": ["Dogs"],
        "description": "",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "put": {
        "tags": ["Dogs"],
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "MongoDB ObjectId of the dog",
            "schema": {
              "type": "string",
              "pattern": "^[a-fA-F0-9]{24}$"
            }
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "Dog object to create or update",
            "schema": {
              "type": "object",
              "properties": {
                "name": { "type": "string", "minLength": 1 },
                "breed": { "type": "string", "minLength": 3 },
                "age": { "type": "integer", "minimum": 0 },
                "size": {
                  "type": "string",
                  "enum": ["Small", "Medium", "Large"]
                },
                "shelterId": {
                  "type": "string",
                  "pattern": "^[a-fA-F0-9]{24}$"
                },
                "adopted": { "type": "boolean" },
                "description": { "type": "string", "minLength": 10 },
                "vaccinated": { "type": "boolean" }
              },
              "required": [
                "name",
                "breed",
                "age",
                "size",
                "shelterId",
                "adopted",
                "description",
                "vaccinated"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "delete": {
        "tags": ["Dogs"],
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/shelters/": {
      "get": {
        "tags": ["Shelters"],
        "description": "",
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "tags": ["Shelters"],
        "description": "",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "Shelter object to create or update",
            "schema": {
              "type": "object",
              "properties": {
                "name": { "type": "string", "minLength": 3 },
                "location": { "type": "string", "minLength": 10 },
                "number": { "type": "string", "minLength": 10 },
                "email": { "type": "string", "format": "email" },
                "availability": { "type": "string", "minLength": 10 }
              },
              "required": [
                "name",
                "location",
                "number",
                "email",
                "availability"
              ]
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/shelters/{id}": {
      "get": {
        "tags": ["Shelters"],
        "description": "",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "put": {
        "tags": ["Shelters"],
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "MongoDB ObjectId of the shelter",
            "schema": {
              "type": "string",
              "pattern": "^[a-fA-F0-9]{24}$"
            }
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "Shelter object to create or update",
            "schema": {
              "type": "object",
              "properties": {
                "name": { "type": "string", "minLength": 3 },
                "location": { "type": "string", "minLength": 10 },
                "number": { "type": "string", "minLength": 10 },
                "email": { "type": "string", "format": "email" },
                "availability": { "type": "string", "minLength": 10 }
              },
              "required": [
                "name",
                "location",
                "number",
                "email",
                "availability"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "delete": {
        "tags": ["Shelters"],
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/users/": {
      "get": {
        "tags": ["Users"],
        "description": "",
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "tags": ["Users"],
        "description": "",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "User object to create or update",
            "schema": {
              "type": "object",
              "properties": {
                "name": { "type": "string", "minLength": 3 },
                "email": { "type": "string", "format": "email" },
                "role": { "type": "string", "enum": ["admin", "user"] }
              },
              "required": ["name", "email", "password", "role"]
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/users/{id}": {
      "get": {
        "tags": ["Users"],
        "description": "",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "put": {
        "tags": ["Users"],
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "MongoDB ObjectId of the user",
            "schema": {
              "type": "string",
              "pattern": "^[a-fA-F0-9]{24}$"
            }
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "User object to create or update",
            "schema": {
              "type": "object",
              "properties": {
                "name": { "type": "string", "minLength": 3 },
                "email": { "type": "string", "format": "email" },
                "role": { "type": "string", "enum": ["admin", "user"] }
              },
              "required": ["name", "email", "password", "role"]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "delete": {
        "tags": ["Users"],
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/adoptions/": {
      "get": {
        "tags": ["Adoptions"],
        "description": "",
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "tags": ["Adoptions"],
        "description": "",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "Adoption object to create or update",
            "schema": {
              "type": "object",
              "properties": {
                "userId": {
                  "type": "string",
                  "pattern": "^[a-fA-F0-9]{24}$"
                },
                "dogId": {
                  "type": "string",
                  "pattern": "^[a-fA-F0-9]{24}$"
                },
                "adoptionDate": {
                  "type": "string",
                  "format": "date-time"
                },
                "status": {
                  "type": "string",
                  "enum": ["pending", "approved", "rejected"]
                }
              },
              "required": ["userId", "dogId", "adoptionDate", "status"]
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/adoptions/{id}": {
      "get": {
        "tags": ["Adoptions"],
        "description": "",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "put": {
        "tags": ["Adoptions"],
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "MongoDB ObjectId of the adoption",
            "schema": {
              "type": "string",
              "pattern": "^[a-fA-F0-9]{24}$"
            }
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "Adoption object to create or update",
            "schema": {
              "type": "object",
              "properties": {
                "userId": {
                  "type": "string",
                  "pattern": "^[a-fA-F0-9]{24}$"
                },
                "dogId": {
                  "type": "string",
                  "pattern": "^[a-fA-F0-9]{24}$"
                },
                "adoptionDate": {
                  "type": "string",
                  "format": "date-time"
                },
                "status": {
                  "type": "string",
                  "enum": ["pending", "approved", "rejected"]
                }
              },
              "required": ["userId", "dogId", "adoptionDate", "status"]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "delete": {
        "tags": ["Adoptions"],
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/auth/": {
      "get": {
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "tags": ["Auth"],
        "summary": "User login",
        "description": "Login using name and email",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email",
                    "example": "juanperez@example.com"
                  },
                  "name": {
                    "type": "string",
                    "minLength": 3,
                    "example": "Juan Pérez"
                  }
                },
                "required": ["email", "name"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful login",
            "content": {
              "application/json": {
                "example": {
                  "token": "your-jwt-token-here"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "msg": "Invalid email",
                      "param": "email",
                      "location": "body"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/auth/logout": {
      "post": {
        "tags": ["Auth"],
        "description": "",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    }
  }
}
